-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.assesor
(
    id_assesor integer NOT NULL,
    id_centre smallint NOT NULL,
    id_language smallint NOT NULL,
    last_update date[] NOT NULL,
    first_name character varying(50)[] COLLATE pg_catalog."default",
    middle_name character varying(50)[] COLLATE pg_catalog."default",
    last_name character varying(50)[] COLLATE pg_catalog."default",
    CONSTRAINT assesor_pkey PRIMARY KEY (id_assesor)
);

CREATE TABLE IF NOT EXISTS public.assesor_customer
(
    assesor_id_assesor integer NOT NULL,
    customer_id_assesor smallint
);

CREATE TABLE IF NOT EXISTS public.centre
(
    id_centre integer NOT NULL,
    name character varying(50)[] COLLATE pg_catalog."default",
    address character varying(50)[] COLLATE pg_catalog."default",
    last_update date[] NOT NULL,
    status bit(1) NOT NULL,
    CONSTRAINT centre_pkey PRIMARY KEY (id_centre)
);

CREATE TABLE IF NOT EXISTS public.customer
(
    id_customer integer NOT NULL,
    first_name character varying(50)[] COLLATE pg_catalog."default" NOT NULL,
    middle_name character varying(50)[] COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50)[] COLLATE pg_catalog."default" NOT NULL,
    home_address "char"[] NOT NULL,
    postal_code "char"[] NOT NULL,
    phone_number numeric NOT NULL,
    email "char"[] NOT NULL,
    marital_status "char"[] NOT NULL,
    first_day_arrive date[] NOT NULL,
    years_study numeric[] NOT NULL,
    job_country "char"[] NOT NULL,
    id_assesor smallint,
    id_scorecus smallint NOT NULL,
    CONSTRAINT cliente_pkey PRIMARY KEY (id_customer)
);

CREATE TABLE IF NOT EXISTS public.language
(
    id_language integer NOT NULL,
    name "char"[] NOT NULL,
    last_update date[] NOT NULL,
    status bit(1) NOT NULL,
    CONSTRAINT language_pkey PRIMARY KEY (id_language)
);

CREATE TABLE IF NOT EXISTS public.score
(
    id_score integer NOT NULL,
    bench_mark numeric NOT NULL,
    last_update date[] NOT NULL,
    description "char"[] NOT NULL,
    id_scorecus smallint NOT NULL,
    CONSTRAINT score_pkey PRIMARY KEY (id_score)
);

CREATE TABLE IF NOT EXISTS public.scorexcustomer
(
    id_scorecus integer NOT NULL,
    id_customer smallint NOT NULL,
    score_listening numeric NOT NULL,
    score_writting numeric NOT NULL,
    score_reading numeric NOT NULL,
    last_update date[] NOT NULL,
    CONSTRAINT scorexcustomer_pkey PRIMARY KEY (id_scorecus)
);

CREATE TABLE IF NOT EXISTS public.centre_assesor
(
    centre_id_centre integer NOT NULL,
    assesor_id_centre smallint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.language_assesor
(
    language_id_language integer NOT NULL,
    assesor_id_language smallint NOT NULL
);

ALTER TABLE IF EXISTS public.assesor_customer
    ADD CONSTRAINT assesor_customer_assesor_id_assesor_fkey FOREIGN KEY (assesor_id_assesor)
    REFERENCES public.assesor (id_assesor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.assesor_customer
    ADD FOREIGN KEY (customer_id_assesor)
    REFERENCES public.customer (id_customer) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.customer
    ADD CONSTRAINT customer_id_scorecus_fkey FOREIGN KEY (id_scorecus)
    REFERENCES public.scorexcustomer (id_scorecus) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.score
    ADD CONSTRAINT score_id_scorecus_fkey FOREIGN KEY (id_scorecus)
    REFERENCES public.scorexcustomer (id_scorecus) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.centre_assesor
    ADD FOREIGN KEY (centre_id_centre)
    REFERENCES public.centre (id_centre) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.centre_assesor
    ADD FOREIGN KEY (assesor_id_centre)
    REFERENCES public.assesor (id_assesor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

/************************/
ALTER TABLE IF EXISTS public.language_assesor
    ADD FOREIGN KEY (language_id_language)
    REFERENCES public.language (id_language) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.language_assesor
    ADD FOREIGN KEY (assesor_id_language)
    REFERENCES public.assesor (id_language) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;